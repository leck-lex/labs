{"mappings":"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","sources":["src/client/js/constants/constants.js","src/client/js/api/api-client.js","src/client/js/core/element/config/element-config.js","src/client/js/core/element/base-element.js","src/client/js/components/loader/loader-spinner.js","src/client/js/components/todo/header/todo-header.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-326c622b967c4a05.js","src/client/js/components/todo/list/todo-list-item.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-83137172a95e45c3.js","src/client/js/components/todo/list/todo-list.js","src/client/js/components/todo/todo.js","src/client/js/core/app/app.js","src/client/js/main.js"],"sourcesContent":["export class Constants {\r\n    /** @type {string} */\r\n    static API_BASE_URL = 'api/';\r\n\r\n    /** @type {string} */\r\n    static EVENT_ITEM_UPDATE = 'item-update';\r\n\r\n    /** @type {string} */\r\n    static EVENT_ITEM_CREATE = 'item-create';\r\n\r\n    /** @type {string} */\r\n    static EVENT_ITEM_DELETE = 'item-delete';\r\n}\r\n","import { Constants } from '../constants/constants';\r\n\r\nexport class ApiClient {\r\n    /**\r\n     * @returns {Promise}\r\n     */\r\n    static async getAllItems() {\r\n        return await this.#request('GET');\r\n    }\r\n\r\n    /**\r\n     * @param {object} data\r\n     * @returns {Promise}\r\n     */\r\n    static async createItem(data) {\r\n        return await this.#request('POST', '', data);\r\n    }\r\n\r\n    /**\r\n     * @param {string} id\r\n     * @param {object} data\r\n     * @returns {Promise}\r\n     */\r\n    static async updateItem(id, data) {\r\n        return await this.#request('PATCH', id, data);\r\n    }\r\n\r\n    /**\r\n     * @param {string} id\r\n     * @returns {Promise}\r\n     */\r\n    static async deleteItem(id) {\r\n        return await this.#request('DELETE', id);\r\n    }\r\n\r\n    /**\r\n     * @param {string} method\r\n     * @param {string} path\r\n     * @param {object} data\r\n     * @returns {Promise}\r\n     */\r\n    static async #request(method, path = '', data = undefined) {\r\n        const options = {\r\n            method: method,\r\n        };\r\n        if (data) {\r\n            options.headers = {\r\n                'Content-Type': 'application/json',\r\n            };\r\n            options.body = JSON.stringify(data);\r\n        }\r\n        const res = await fetch(Constants.API_BASE_URL + path, options);\r\n        if (!res.ok) {\r\n            throw new Error(res.status + ' ' + res.statusText);\r\n        } else {\r\n            return res.status !== 204 ? res.json() : {};\r\n        }\r\n    }\r\n}\r\n","export class ElementConfig {\r\n    /** @type {string[]}*/\r\n    #classList = [];\r\n    /**\r\n     * @constructor\r\n     * @param {object} init\r\n     */\r\n    constructor(init) {\r\n        this.id;\r\n        this.tag;\r\n        this.options;\r\n\r\n        this.populate(init);\r\n    }\r\n\r\n    /**\r\n     * @param {*} space-separated string or an array of class-names\r\n     */\r\n    set classList(value) {\r\n        if (typeof value === 'string') {\r\n            value = value.split(' ');\r\n        }\r\n        this.#classList = [...this.#classList, ...value];\r\n    }\r\n    /**\r\n     * @returns {string[]}\r\n     */\r\n    get classList() {\r\n        return this.#classList;\r\n    }\r\n    /**\r\n     * @param {object} init\r\n     */\r\n    populate(init) {\r\n        if (init) Object.assign(this, init);\r\n    }\r\n}\r\n","import { ElementConfig } from './config/element-config';\r\n\r\nexport class BaseElement {\r\n    /** @type {ElementConfig} */\r\n    #config;\r\n\r\n    /** @type {HTMLElement} */\r\n    #element;\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {ElementConfig} config optional\r\n     */\r\n    constructor(config) {\r\n        this.config = config || new ElementConfig();\r\n        this.validateConfig();\r\n        this.populateFromConfig();\r\n    }\r\n\r\n    /**\r\n     * @param {string}\r\n     */\r\n    set id(value) {\r\n        this.element.id = value;\r\n    }\r\n\r\n    /**\r\n     * @returns {HTMLElement}\r\n     */\r\n    get id() {\r\n        return this.element.id;\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement}\r\n     */\r\n    set element(el) {\r\n        this.#element = el;\r\n    }\r\n\r\n    /**\r\n     * @returns {HTMLElement}\r\n     */\r\n    get element() {\r\n        return this.#element;\r\n    }\r\n\r\n    /**\r\n     * @param {ElementConfig} config\r\n     */\r\n    set config(config) {\r\n        this.#config = config;\r\n    }\r\n\r\n    /**\r\n     * @returns {ElementConfig}\r\n     */\r\n    get config() {\r\n        return this.#config;\r\n    }\r\n\r\n    /**\r\n     * @returns {object}\r\n     * @comment Override this getter to register default component id and classlist if needed\r\n     */\r\n    get defaults() {\r\n        return { tag: 'div', id: '', classList: '' };\r\n    }\r\n\r\n    /**\r\n     * @param {string} htmlString\r\n     */\r\n    render(htmlString) {\r\n        this.element.innerHTML = htmlString;\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} element\r\n     * @returns {CustomElement}\r\n     */\r\n    appendTo(el) {\r\n        el.appendChild(this.element);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} element\r\n     * @returns {CustomElement}\r\n     */\r\n    prependTo(el) {\r\n        element.prependChild(this.element);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    validateConfig() {\r\n        this.config.tag = this.config.tag || this.defaults.tag;\r\n        this.config.id = this.config.id || this.defaults.id;\r\n        this.config.classList = this.defaults.classList;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    populateFromConfig() {\r\n        this.element = document.createElement(this.config.tag);\r\n        this.id = this.config.id;\r\n        this.element.classList.add(...this.config.classList);\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    destroy() {\r\n        this.element.remove();\r\n    }\r\n}\r\n","import { BaseElement } from '../../core/element/base-element.js';\r\n\r\nexport class LoaderSpinner extends BaseElement {\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * @returns {object}\r\n     */\r\n    get defaults() {\r\n        return { tag: 'div', id: 'loader-spinner', classList: 'todo__header-loader' };\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    render() {\r\n        super.render(\r\n            '<svg class=\"loader__spinner\" viewBox=\"0 0 50 50\"><circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle></svg>'\r\n        );\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    show() {\r\n        this.element.querySelector('.loader__spinner').classList.add('show');\r\n    }\r\n\r\n    /**\r\n     * @param {number} delay\r\n     */\r\n    hide(delay = 0) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                this.element.querySelector('.loader__spinner').classList.remove('show');\r\n                resolve();\r\n            }, delay);\r\n        });\r\n    }\r\n}\r\n","import template from 'bundle-text:../../../../templates/todo/todo-header.html';\r\nimport { Constants } from '../../../constants/constants.js';\r\nimport { BaseElement } from '../../../core/element/base-element.js';\r\nimport { LoaderSpinner } from '../../loader/loader-spinner.js';\r\n\r\nexport class TodoHeader extends BaseElement {\r\n    /** @type {LoaderSpinner} */\r\n    #loader;\r\n\r\n    /** @type {HTMLButtonElement} */\r\n    #btnCreate;\r\n\r\n    /** @type {HTMLButtonElement} */\r\n    #btnSave;\r\n\r\n    /** @type {HTMLFormElement} */\r\n    #form;\r\n\r\n    /** @type {HTMLInputElement} */\r\n    #input;\r\n\r\n    /** @type {HTMLHeadingElement} */\r\n    #heading;\r\n\r\n    /** @type {boolean} */\r\n    #isOpen = false;\r\n\r\n    /** @type {number} */\r\n    #focusTimeout;\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * @returns {object}\r\n     */\r\n    get defaults() {\r\n        return { tag: 'header', id: 'todo-header', classList: 'todo__header' };\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    render() {\r\n        super.render(template);\r\n\r\n        this.#form = this.element.querySelector('form');\r\n        this.#form.addEventListener('submit', (event) => {\r\n            event.preventDefault();\r\n            this.#dispatchCreateEvent();\r\n        });\r\n\r\n        this.#input = this.element.querySelector('input');\r\n\r\n        this.#btnCreate = this.element.querySelector('.todo__header-btn-create');\r\n        this.#btnCreate.addEventListener('click', () => this.#toggleInput());\r\n\r\n        this.#btnSave = this.element.querySelector('.todo__header-btn-save');\r\n        this.#btnSave.addEventListener('click', () => this.#form.requestSubmit());\r\n\r\n        this.#heading = this.element.querySelector('.todo__header-heading');\r\n\r\n        this.#loader = new LoaderSpinner().appendTo(this.element);\r\n        this.#loader.show();\r\n\r\n        document.addEventListener('click', (event) => {\r\n            if (!event.composedPath().includes(this.element) && this.#isOpen) this.#toggleInput();\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    enable() {\r\n        this.#loader.hide(500).then(() => this.#btnCreate.classList.add('show'));\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    #dispatchCreateEvent() {\r\n        const event = new CustomEvent(Constants.EVENT_ITEM_CREATE, {\r\n            detail: { title: this.#input.value, done: false },\r\n        });\r\n        document.dispatchEvent(event);\r\n\r\n        this.#input.value = '';\r\n        this.#toggleInput();\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    #toggleInput() {\r\n        this.#isOpen = !this.#isOpen;\r\n        if (this.#isOpen) {\r\n            this.#btnCreate.setAttribute('title', 'Cancel');\r\n            this.#focusTimeout = setTimeout(() => {\r\n                this.#input.focus();\r\n            }, 300);\r\n        } else {\r\n            this.#btnCreate.setAttribute('title', 'Add task');\r\n            clearTimeout(this.#focusTimeout);\r\n        }\r\n\r\n        this.#input.classList.toggle('show');\r\n        this.#btnCreate.classList.toggle('mode-cancel');\r\n        this.#btnSave.classList.toggle('show');\r\n        this.#heading.classList.toggle('hide');\r\n    }\r\n}\r\n","module.exports = \"a4c07e6b44febf48\";","import template from 'bundle-text:../../../../templates/todo/todo-list-item.html';\r\nimport { Constants } from '../../../constants/constants';\r\nimport { BaseElement } from '../../../core/element/base-element';\r\n\r\nexport class TodoListItem extends BaseElement {\r\n    /** @type {boolean} */\r\n    #done;\r\n\r\n    /** @type {HTMLFormElement} */\r\n    #form;\r\n\r\n    /** @type {HTMLInputElement} */\r\n    #title;\r\n\r\n    /** @type {HTMLElement} */\r\n    #check;\r\n\r\n    /** @type {HTMLElement} */\r\n    #menu;\r\n\r\n    /** @type {HTMLButtonElement} */\r\n    #btnMenu;\r\n\r\n    /** @type {HTMLButtonElement} */\r\n    #btnDelete;\r\n\r\n    /** @type {HTMLButtonElement} */\r\n    #btnSave;\r\n\r\n    /** @type {boolean} */\r\n    #isMenuOpen = false;\r\n\r\n    /** @type {boolean} */\r\n    #isSaved;\r\n\r\n    /** @type {string} */\r\n    #prevTitleValue;\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor(config) {\r\n        super(config);\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * @returns {object}\r\n     */\r\n    get defaults() {\r\n        return { tag: 'li', id: 'todo-list-item', classList: 'todo__list-item' };\r\n    }\r\n\r\n    /**\r\n     * @param {string} value\r\n     */\r\n    set title(value) {\r\n        this.#title.value = value;\r\n    }\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    get title() {\r\n        return this.#title.value;\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} value\r\n     */\r\n    set done(value) {\r\n        this.#done = value;\r\n        this.#check.innerText = value ? 'check_circle_outline' : 'radio_button_unchecked';\r\n        this.#done ? this.#title.classList.add('done') : this.#title.classList.remove('done');\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean}\r\n     */\r\n    get done() {\r\n        return this.#done;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    render() {\r\n        super.render(template);\r\n\r\n        const cPrefix = '.todo__list-item-';\r\n\r\n        this.#form = this.element.querySelector('form');\r\n        this.#form.addEventListener('submit', (event) => {\r\n            event.preventDefault();\r\n            this.#isSaved = true;\r\n            this.#toggleMenu();\r\n            this.#dispatchUpdateEvent({ title: this.title }, { title: this.#prevTitleValue });\r\n        });\r\n\r\n        this.#title = this.element.querySelector('input');\r\n\r\n        this.#check = this.element.querySelector(cPrefix + 'check');\r\n        this.#check.addEventListener('click', this);\r\n\r\n        this.#menu = this.element.querySelector(cPrefix + 'menu');\r\n\r\n        this.#btnMenu = this.element.querySelector(cPrefix + 'btn-menu');\r\n        this.#btnMenu.addEventListener('click', this);\r\n\r\n        this.#btnDelete = this.element.querySelector(cPrefix + 'btn-delete');\r\n        this.#btnDelete.addEventListener('click', this);\r\n\r\n        this.#btnSave = this.element.querySelector(cPrefix + 'btn-save');\r\n        this.#btnSave.addEventListener('click', this);\r\n\r\n        document.addEventListener('click', this.#handleDocumentClick.bind(this));\r\n    }\r\n\r\n    /**\r\n     * @param {object} data\r\n     */\r\n    populate(data) {\r\n        Object.assign(this, data);\r\n    }\r\n\r\n    /**\r\n     * @param {Event} event\r\n     */\r\n    handleEvent(event) {\r\n        switch (true) {\r\n            case event.target === this.#check:\r\n                this.#dispatchUpdateEvent({ done: !this.done }, { done: this.done });\r\n                break;\r\n            case event.target === this.#btnSave:\r\n                this.#form.requestSubmit();\r\n                break;\r\n            case event.target === this.#btnDelete:\r\n                this.#dispatchDeleteEvent();\r\n                break;\r\n            case event.target === this.#btnMenu:\r\n                this.#toggleMenu();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Event} event\r\n     */\r\n    #handleDocumentClick(event) {\r\n        if (!event.composedPath().includes(this.element) && this.#isMenuOpen) {\r\n            this.#toggleMenu();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    #toggleMenu() {\r\n        this.#isMenuOpen = !this.#isMenuOpen;\r\n        this.#title.disabled = !this.#isMenuOpen;\r\n\r\n        if (this.#isMenuOpen) {\r\n            this.#prevTitleValue = this.title;\r\n            this.#isSaved = false;\r\n            this.#title.focus();\r\n        } else if (!this.#isSaved) {\r\n            this.title = this.#prevTitleValue;\r\n        }\r\n\r\n        this.#menu.classList.toggle('show');\r\n        this.#btnMenu.classList.toggle('selected');\r\n    }\r\n\r\n    /**\r\n     * @param {object} props\r\n     */\r\n    #dispatchUpdateEvent(props, prevProps) {\r\n        const event = new CustomEvent(Constants.EVENT_ITEM_UPDATE, {\r\n            detail: { id: this.id, props: props, prevProps: prevProps },\r\n        });\r\n        document.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    #dispatchDeleteEvent() {\r\n        const event = new CustomEvent(Constants.EVENT_ITEM_DELETE, {\r\n            detail: this,\r\n        });\r\n        document.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    destroy() {\r\n        this.#check.removeEventListener('click', this);\r\n        this.#btnMenu.removeEventListener('click', this);\r\n        this.#btnDelete.removeEventListener('click', this);\r\n        this.#btnSave.removeEventListener('click', this);\r\n        document.removeEventListener('click', this.#handleDocumentClick.bind(this));\r\n        super.destroy();\r\n    }\r\n}\r\n","module.exports = \"f0298c9b1ca2c605\";","import { BaseElement } from '../../../core/element/base-element';\r\nimport { TodoListItem } from './todo-list-item';\r\n\r\nexport class TodoList extends BaseElement {\r\n    /** @type {TodoListItem[]} */\r\n    #items = [];\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @returns {object}\r\n     */\r\n    get defaults() {\r\n        return { tag: 'ul', id: 'todo-list', classList: 'todo__list' };\r\n    }\r\n\r\n    /**\r\n     * @param {objetct} data\r\n     * @returns {TodoListItem}\r\n     */\r\n    addItem(data) {\r\n        const item = new TodoListItem();\r\n        item.populate(data);\r\n        item.appendTo(this.element);\r\n        this.#items.push(item);\r\n        return item;\r\n    }\r\n\r\n    /**\r\n     * @param {string} id\r\n     * @param {object} props\r\n     */\r\n    updateItem(id, props) {\r\n        const item = this.#items.find((item) => item.id === id);\r\n        item.populate(props);\r\n    }\r\n\r\n    /**\r\n     * @param {string} id\r\n     * @param {object} props\r\n     */\r\n    deleteItem(id) {\r\n        const index = this.#items.findIndex((item) => item.id === id);\r\n        if (index !== -1) {\r\n            const item = this.#items.splice(index, 1)[0];\r\n            item.destroy();\r\n        }\r\n    }\r\n}\r\n","import { ApiClient } from '../../api/api-client.js';\r\nimport { Constants } from '../../constants/constants.js';\r\nimport { BaseElement } from '../../core/element/base-element.js';\r\nimport { TodoHeader } from './header/todo-header.js';\r\nimport { TodoList } from './list/todo-list.js';\r\n\r\nexport class Todo extends BaseElement {\r\n    /** @type {TodoHeader} */\r\n    #header;\r\n\r\n    /** @type {TodoList} */\r\n    #list;\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * @returns {object}\r\n     */\r\n    get defaults() {\r\n        return { tag: 'div', id: 'todo', classList: 'todo' };\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    render() {\r\n        this.#header = new TodoHeader();\r\n        this.#header.appendTo(this.element);\r\n\r\n        this.#list = new TodoList();\r\n        this.#list.appendTo(this.element);\r\n\r\n        document.addEventListener(Constants.EVENT_ITEM_CREATE, (event) =>\r\n            this.#createItem(event.detail)\r\n        );\r\n\r\n        document.addEventListener(Constants.EVENT_ITEM_UPDATE, (event) =>\r\n            this.#updateItem(event.detail.id, event.detail.props, event.detail.prevProps)\r\n        );\r\n\r\n        document.addEventListener(Constants.EVENT_ITEM_DELETE, (event) =>\r\n            this.#deleteItem(event.detail)\r\n        );\r\n\r\n        ApiClient.getAllItems()\r\n            .then((data) => {\r\n                this.#header.enable();\r\n                this.#addListItems(data.items);\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n    /**\r\n     * @param {object} data\r\n     */\r\n    #createItem(data) {\r\n        ApiClient.createItem(data)\r\n            .then((data) => this.#list.addItem(data))\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @param {string} id\r\n     * @param {object} props\r\n     */\r\n    #updateItem(id, props, prevProps) {\r\n        //Immediate visual update before server save\r\n        this.#list.updateItem(id, props);\r\n\r\n        ApiClient.updateItem(id, props).catch((error) => {\r\n            //Revert item's visual update if error from server\r\n            this.#list.updateItem(id, prevProps);\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {TodoListItem} item\r\n     */\r\n    #deleteItem(item) {\r\n        //Immediate visual update before server save\r\n        item.element.classList.add('hide');\r\n        ApiClient.deleteItem(item.id)\r\n            .then(() => this.#list.deleteItem(item.id))\r\n            .catch((error) => {\r\n                //Redraw item if error from server\r\n                item.element.classList.remove('hide');\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @param {objetct[]} dataList\r\n     */\r\n    #addListItems(dataList) {\r\n        dataList.forEach((data) => this.#list.addItem(data));\r\n    }\r\n}\r\n","import { Todo } from '../../components/todo/todo.js';\r\n\r\nexport class App {\r\n    /** @type {App} */\r\n    static #instance;\r\n\r\n    /**\r\n     * @returns {App} global instance of App\r\n     */\r\n    static get instance() {\r\n        if (!this.#instance) {\r\n            this.#instance = new App();\r\n        }\r\n        return this.#instance;\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {}\r\n\r\n    /**\r\n     *\r\n     */\r\n    run() {\r\n        const todo = new Todo();\r\n        todo.appendTo(document.querySelector('main'));\r\n    }\r\n}\r\n","import { App } from './core/app/app';\r\n\r\nApp.instance.run();\r\n"],"names":["$589524053a408fcf$export$a002182e51710d39","static","$b7ee0e372d3e0678$export$dc890958d2b428da","this","request","data","id","$fdbb8094601fa9ca$export$763ea9d89dbce745","classList","constructor","init","tag","options","populate","value","split","$d542a7cde3bfcd3e$export$a1a7283d3ef4b3a1","config","element","validateConfig","populateFromConfig","el","defaults","render","htmlString","innerHTML","$45ea43cb9120adb3$export$57a80cbf859d803c","super","querySelector","add","$d78ab230c2784eeb$export$7dddc6c21deaacf0","loader","btnCreate","btnSave","form","input","heading","isOpen","focusTimeout","$parcel$interopDefault","addEventListener","event","preventDefault","dispatchCreateEvent","toggleInput","requestSubmit","appendTo","show","document","composedPath","includes","hide","then","CustomEvent","EVENT_ITEM_CREATE","detail","title","done","dispatchEvent","setAttribute","setTimeout","$97e68ed7e41654cf$export$41a0eeb6f818a938","check","menu","btnMenu","btnDelete","isMenuOpen","isSaved","prevTitleValue","innerText","remove","cPrefix","toggleMenu","dispatchUpdateEvent","handleDocumentClick","bind","target","dispatchDeleteEvent","disabled","focus","toggle","props","prevProps","$345925887a461175$export$1637e515a5a47691","items","addItem","item","push","updateItem","find","$c0e5aa45fd271307$export$9f7771068413722","header","list","createItem","EVENT_ITEM_UPDATE","EVENT_ITEM_DELETE","deleteItem","getAllItems","enable","addListItems","catch","error","console","$75953815c10d3553$export$86fbec116b87613f","instance","run"],"version":3,"file":"index.2976ba40.js.map"}