{"mappings":"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","sources":["src/server/server.js","src/server/api/api-router.js","src/server/api/api-service.js","src/server/io/file-storage.js","src/server/constants/constants.js"],"sourcesContent":["import express from 'express';\r\nimport { ApiRouter } from './api/api-router.js';\r\nimport { Constants } from './constants/constants.js';\r\nimport { FileStorage } from './io/file-storage.js';\r\n\r\nexport class Server {\r\n    /** @type {Server} */\r\n    static #instance;\r\n\r\n    /**\r\n     * @returns {Server} global instance of Server\r\n     */\r\n    static get instance() {\r\n        if (this.#instance === undefined) {\r\n            this.#instance = new Server();\r\n        }\r\n        return this.#instance;\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {}\r\n\r\n    /**\r\n     *\r\n     */\r\n    run() {\r\n        const app = express();\r\n        app.use(express.json());\r\n\r\n        app.use(express.static(Constants.PUBLIC_PATH));\r\n        app.use('/api', ApiRouter.routes);\r\n\r\n        app.listen(Constants.PORT, () =>\r\n            console.log('Server is running on port: ' + Constants.PORT)\r\n        );\r\n    }\r\n}\r\n\r\nServer.instance.run();\r\n","import express from 'express';\r\nimport { ApiService } from './api-service.js';\r\n\r\nexport class ApiRouter {\r\n    /**\r\n     * @returns {express.Router}\r\n     */\r\n    static get routes() {\r\n        const router = express.Router();\r\n\r\n        router.get('/', (req, res) => ApiService.getAllItems(req, res));\r\n\r\n        router.post('/', (req, res) => ApiService.createItem(req, res));\r\n\r\n        router.get('/:id', (req, res) => ApiService.handleItemByID(req, res));\r\n\r\n        router.patch('/:id', (req, res) => ApiService.handleItemByID(req, res));\r\n\r\n        router.delete('/:id', (req, res) => ApiService.handleItemByID(req, res));\r\n\r\n        return router;\r\n    }\r\n}\r\n","import { FileStorage } from '../io/file-storage.js';\r\n\r\nexport class ApiService {\r\n    /**\r\n     * @param {express.Request} req\r\n     * @param {express.Response} res\r\n     */\r\n    static async getAllItems(req, res) {\r\n        try {\r\n            const data = await FileStorage.readFile();\r\n            this.#sendData(res, 200, data);\r\n        } catch (error) {\r\n            this.#sendError(res, 505, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {express.Request} req\r\n     * @param {express.Response} res\r\n     */\r\n    static async createItem(req, res) {\r\n        try {\r\n            if (req.body && Object.keys(req.body).length > 0) {\r\n                const data = await FileStorage.readFile();\r\n                const item = req.body;\r\n                item.id = Date.now();\r\n                data.items.push(item);\r\n                await FileStorage.writeFile(data);\r\n                this.#sendData(res, 201, item);\r\n            } else {\r\n                this.#sendError(res, 400, 'Could not add item because it has no properties.');\r\n            }\r\n        } catch (error) {\r\n            this.#sendError(res, 505, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {express.Request} req\r\n     * @param {express.Response} res\r\n     */\r\n    static async handleItemByID(req, res) {\r\n        try {\r\n            const id = req.params.id;\r\n            const data = await FileStorage.readFile();\r\n            const index = data.items.findIndex((item) => item.id == id);\r\n\r\n            if (index !== -1) {\r\n                const item = data.items[index];\r\n\r\n                switch (req.method) {\r\n                    case 'GET':\r\n                        this.#sendData(res, 200, item);\r\n                        return;\r\n\r\n                    case 'DELETE':\r\n                        data.items.splice(index, 1);\r\n                        break;\r\n\r\n                    case 'PATCH':\r\n                        Object.assign(item, req.body);\r\n                        break;\r\n                }\r\n\r\n                await FileStorage.writeFile(data);\r\n                this.#sendStatus(res, 204);\r\n            } else {\r\n                this.#sendError(res, 404, `Item with id: ${id} not found.`);\r\n            }\r\n        } catch (error) {\r\n            this.#sendError(res, 505, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {express.Response} res\r\n     * @param {number} code\r\n     * @param {object} data\r\n     */\r\n    static #sendData(res, code, data) {\r\n        res.status(code).json(data);\r\n        res.end();\r\n    }\r\n\r\n    /**\r\n     * @param {express.Response} res\r\n     * @param {number} code\r\n     * @param {string} msg\r\n     */\r\n    static #sendError(res, code, msg) {\r\n        res.status(code).json({ message: msg });\r\n        res.end();\r\n    }\r\n\r\n    /**\r\n     * @param {express.Response} res\r\n     * @param {number} code\r\n     */\r\n    static #sendStatus(res, code) {\r\n        res.sendStatus(code);\r\n        res.end();\r\n    }\r\n}\r\n","import fsx from 'fs-extra';\r\nimport { Storage } from '@google-cloud/storage';\r\nimport { Constants } from '../constants/constants.js';\r\n\r\nexport class FileStorage {\r\n    /**\r\n     * @type {File}\r\n     */\r\n    static #gcloudFile;\r\n\r\n    /**\r\n     * @returns {File}\r\n     */\r\n    static get gcloudFile() {\r\n        if (!this.#gcloudFile) {\r\n            this.#gcloudFile = new Storage()\r\n                .bucket(process.env.GCLOUD_STORAGE_BUCKET)\r\n                .file(process.env.GCLOUD_DATA_PATH);\r\n        }\r\n        return this.#gcloudFile;\r\n    }\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    static get localFile() {\r\n        return Constants.LOCAL_DATA_PATH;\r\n    }\r\n\r\n    /**\r\n     * @returns {Promise}\r\n     */\r\n    static async readFile() {\r\n        if (process.env.NODE_ENV === Constants.ENV_DEV_LOCAL) {\r\n            return await fsx.readJson(this.localFile);\r\n        } else {\r\n            return new Promise((resolve, reject) => {\r\n                this.gcloudFile\r\n                    .download()\r\n                    .then((data) => {\r\n                        resolve(JSON.parse(data[0].toString('utf8')));\r\n                    })\r\n                    .catch((error) => reject(error));\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @returns {Promise}\r\n     */\r\n    static async writeFile(data) {\r\n        if (process.env.NODE_ENV === Constants.ENV_DEV_LOCAL) {\r\n            return await fsx.writeJson(this.localFile, data);\r\n        } else {\r\n            return await this.gcloudFile.save(JSON.stringify(data), {\r\n                contentType: 'auto',\r\n                resumable: false,\r\n            });\r\n        }\r\n    }\r\n}\r\n","import path from 'path';\r\n\r\nexport class Constants {\r\n    /** @type {string} */\r\n    static LOCAL_DATA_PATH = path.resolve('data', 'data.json');\r\n\r\n    /** @type {string} */\r\n    static PUBLIC_PATH = path.resolve('dist', 'public');\r\n\r\n    /** @type {string} */\r\n    static ENV_DEV_LOCAL = 'dev-local';\r\n\r\n    /** @type {number} */\r\n    static PORT = process.env.PORT || 7777;\r\n}\r\n"],"names":[],"version":3,"file":"server.js.map","sourceRoot":"../"}